<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACEFgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAFktJ
        REFUeNrtnXd8VFXax78zSSY9pBMCLEUgIAiCFQsoTZoKFlRAFOwL+1pY9wXLon58d1kbupZdBMW6rKhI
        l7UrK02kSZEgIC0QElInbZKZef8gYDJ37sydyZR77pzv/eSP3GnnnOd3T3nOc84BiUQikUgkEolEIpFI
        JBKJRCKRSCQSiURiTEwRlVsL0WcuM2aiiCIKBzYacODATn3jJQVgCOJIIIXWZDdeGSSRTBJJJBKDqfFy
        4qABG3XUUkEZ5ZRRxgmOUUAhVdRQLQUgDlEkk0VXOtKBDnQgl0RiiSPax++xU0stVk5wmH3sYx+/UkIF
        DVIA+iSeLPI4mx70oDOtSMQcwG+3U0UFh9jJDn5iLyVGqRXEF0As2ZzNefSjN61JDnqOnFRQyC42s4Ed
        FGOTAggXyXTiUi7nPNqQHIbfr+AIm9jAevZSKQUQSlLoxUAu51yyiQpzWuwUs5mv+YY9VEgBBJt4ujGY
        4fQjQ1fpclLMVj7nM/ZQKwUQnJS2ZzAjuYQ2uk21kwLWsJzvOIpTCiCQz31vxjCaPGL8+rwdW+M4v5ST
        nKQEG06c0PjnxImZZNJJJ51U4rAQg8XPX6sjn09ZzDYR6gL9CyCDwdzAQLJ9/FwDVkrYTz4FFHOSk5yk
        jBps2LDhaHximxKNBQsWYkklnTTSyaIzXelEKkk++xEK+ZIPWEOpFID/tGEUE7mQeB+evkqK2Es++eRz
        gDKsjcb2j2gSSaMjXelKF7qQQwqxmj9tZSP/ZgXHpAB8pwNjGc+5GqthJ6Xks47N7OEIFVQFIUUJJNOG
        nlzMRXQhTeOn6tnMOyyhQApAO7mM43Z6aRri1XKczaxlHXsoCUnXy0wGeVxMf/rShjgNn2hgM+/yCUf1
        WxPohwzuYD31jV0zT1cZG3mJm+niQxMR2BqhC+OYwzrKNaS2ng1M0VxvRCiJ3MiX1HotTBu7mMMgMgPq
        7/cPE5lcxSvkaxBtLZ8yOkxy1T1mLuJ9Kr0WYjHLuJOOOjB9U6I4i3tYSbGGeuttLtJP06uXhHTgDibT
        zuN7bOxhFcvZhlWnIk6mD6MZQZ6XkcJh5jHfy9ggloxmIndSatS4hHjG8wMOj89NKZ8wifYC+C1MtGMC
        S6jwmB8733GNR5lczi6OcLjxOsJ+rjem+fN43UvFX8YihpMoVK6SuMarCEp5jTzVbxjq8ul6Jhnx2Z/I
        No+FVM5HjBTM+KdJ5lqWehHBVsap1ANDXMYWddxqNPN38fLsl7OYUYIa/zcRjGGZl1y+yO8iTwBRjGSj
        h2Kp4BOuJskQeU1hLMuxesjt94xQOL0MLYA0HqHQYwfpOoMY/zcR3MT32FXzfIIZpESKAHrxYeN0rLvr
        KLPINZTxT5PLIxxQzXcdb3OW8QVgYgRbPBTCUi7XmYsnsLnvx1seegRrudLYAojjXo6qZn8P00g1rPFP
        43nkc4i7sBhVAJk8o9oVqmQBvQ1v/NPkMVe1HqjgSVKMKIDOLKJBJdObuSXCpkjiGc9Pqg3hPFoziDIj
        CeAcPlfN7rse/GFGpheLVDrDDpZyv5EE0J8NKuYv4I8uw59IItXDcPiEy/SywAK4ip0qmVzP0AhboO5K
        FKP4UUM4icACGKMy9m3gQ7pFtPFPczZLPLiIBBfAdRxymx0rz5Ipbd9IFnM8uoqFFcANHHabmeNM1RRM
        aVziaE3OmSubTsz2IoEgCSA6aFmM4kaeo62bV/bxMEtEWToVJC7jGRKalIGT6CDaIiwCSGK8W/Nv40G+
        jmjjA6TQQx91YPD87uXM4r+Ku//lTml+wNmi9UrC0JOvmrVjn0aoy0fJWKo0Df6a9gGEDAnrxuozWVhB
        Z2l5vwVQLWpQaGeW4cTJcjpJu7dAAMfpE4yEBL/nuZ9p1BHDgxyQdm8BK8gXN/GZtJYWbMZ11Pnw9Fex
        KFjNZ2R74sNHbyYRq9EXUsJPfEmZFICx0F7yke0yk0gkEolEIpFIJAFG+2DEQkJI1uw4qIqkI1vEEEAr
        rmMQ7YkJ+pjUhI1fWc1yIx/TIhqpzNOwc1cgLysvy4hB/XCfh7W8wbrszNfZhvARSyJLQ27+U2HjUgK6
        IJvtYRGAlEBIMGt4R0yY0hbF7cyWEgi3AMJJFJOlBCJZAFICQcefkLCf+SEI6bjU7WZppyQAMzgpjaUX
        AXzF9IBHtSeyQEUAUgK6E4CduoB7BKM9SkpKIGiIsiOX7AvoqAYInwTEqgUSSA3RRrc1lPp7SpI4AhBL
        AlEM5i56h+RMYxNWdrKAVcGZRc1ht4uH7u9BiCVOYLFiu7Rqt97BeUI0BDdwLMR+0xL+5MOBdmfw3gcI
        V1DyFmZT7rYW+KvuJZDDn8gJ8W+m8Wce9F0C0WcKNsHtc+0gOUwdxTpeo5ynFHuIRTEFmKnrhqBHWFZB
        J/IYMIc6XwWQzNUMpJ3bU/qcxLrd5iH4mKjjVUyN+2aKJYFcfyrj8Eggmkz+j0m63LHHTAOvgoASiArb
        iiufJRDNVCaHbb7PO/VCSiCci7l8lEA0N+rY/N4lMIMSXade9xKIpovuMyS+BGr5F3sD3Jl20IFJJKhK
        wMQL2iTg+4gzNH6Az2nV5PUYHnB7Qm8Dr5OuO4Pf6rL6v6zJQRCB43yP55RamamlKyrKXEA9rzKLCsX9
        KKYwW4cSaI5J0znovuLZi5vIozzkXQL6FYCTBhcJ/J1HKRVUAuFAkwSUKspnZ7P/47gsJB5tV1ozhqpm
        jY2TIjZylVsJOJkpu4NuJYDnvoBSAMt4vEm94CSH1WERQE9ed1MrmHG66YFEcQcww039ICXgRQJKAdio
        bfZ/dZj2tIxS6eGqvXsKBTyNPYKN7eAgOYqjd7xIQNkHMHn5PziYWvw70Uyhe4Q/72/yqpspYY99Ab10
        Ap0B8J5l0yuizW+ilFm+SkAvASF1FLX4O2LJivAawEw1s4CpCu/uqYZgjkvzrqMawM7mALTfctM7qPBY
        C8TpVQCwlM+l9YIsgUeUEtBPTOBxHmAmw0jS7DUzEyufeVUJuG8IHgFeaNoQ6CkodA/30ZGOGmMTHHTn
        0bB4KAwlAX1FBdewm92a313Aw9LSLZWAyEe1Rwmc9lBJwGtfQGQBSFyxKyTwCC9R40kCgWgC4hlHO78c
        OSbKeZtKabkAMYJkl3rRgYMSN2G9ZxqCQAgggalc4Odnj7FECiBAmBjNaM3vTuRR7MwJTCfQ/+miSJ68
        CTcJPMyBwPQB5JEGYpLBfbITKC6BqD37SQGIS1EAek8pUgDiUsj6ln9JYARgDvPvRyY1vOiD31SFQIwC
        HBRT5FeLZKZQjgNawAZuYxoXkKb5E8mue5YEQgAVTCXeT0dQfQACQSKZH7iHNFI0zoo6mM7dgReAnV+l
        JcJGLcc4pvndxa43ZBscWZikAMQ1XVCm7kXaJSwSSaQTeWSTSSbxlFFMMQXs4ligdgSTAtArCfRiAAPp
        SzqWJnN89dRylHV8y1r2tXzRjhSAHrHQn3sYQqab3n0MMXSnOxM5yAe8zV4pAKPRl7u53usahxi68Chj
        WcB7HA+vAOK4mjZBnxG08xU/G9740dzIk3TV/P6z+RtDmMHWcAogkYe4OOgCsHGX4QWQxDQe9nGvAzNX
        0YYZrPbPAoEZBpo4tbwz2JexacVfeMKvrS56M5+J/pWPSAEhxg47sTCd+/zeYDKX2W62zgiZACQt51bu
        b1GDnMts+kgBiMognlBsgwdQy3ZF2MdhDrn9jj78ldZSACKSykO0U9x1sonfcysFLvdXcS2z3U4ADWNC
        eAQQChkZuRM4mkGKe3XM40YWcFzR97GxlUe4lTWKz0QxxdeNPwMTEFJGWZADO0zYfNsGXSByuEexs081
        f+MFrCoPlwknX/IrLzHK5ZWe3MYsXxzEgRBAJdNJDnof3ck+gwpgBBe53LHzD551s6SrOfu4n0SucLl7
        M+/44h4OhAAa2GFQ04SCWAYrVvCuZrZX85+SwBO877LwqwOX+iIA2QkMN7mK5/8kLyojd1T4jjdc6t4Y
        Bviy/7sUQLi5UNH/X+Wme6eGk4WKpvEScqUAxOF8lx1RaljuU3c3n/+43MnlbCkAUYhVnC52xOVobmWP
        3tSs0new1kUwcbSRAhAFC5kud/Y0a//TmaAw52WMwNLk/+2UNXs9RvGdUgA6rgFcAz8KzzzPMQzjfWY3
        OzgD4Fze43l6nPn/JFaXd/gggOiAZGIQWUH2A5iws479BqwBUl3ulDeGe3bn94xXOSIznWkM5jUWchJo
        UBykkUa0y2kLQRVAIjPpH/Q9xW3ca0AB2BXj/XggjVuY6qUr14PnGcUcvgLFJHK99scxEAIwYQlJbKER
        dwWrU4z423IN9zCkWSuvVnsM5wLe5QvF2sAK7Y75wBhOBoT4i01x8uFABiiaBXUyeICbFQ2FD6cpyqjg
        8FLDUZc7rXz+DteBZJV0BYuDk50aq+sC1lKt6Z3lvgTPSgGEm40aFsjXsJibuZZpbNHwjbsVISRBF0Ao
        QjWMGhCyz6tRtzCVyayhmAVcz2yvy0C+cHO+oiqB6AM4sWINwTDQZkgBVLKYIarzd8d5m9ebDH8P8Bir
        eIARihCS05zgS19+PjABITNJDbojyMEuQwoAVrODvm7uV/EZL/K9Sx/Bzhq2cR3T6OPWep/xU6gFUO8y
        fSHxjSN8yLluGrjVTKXQ7ScqeIt83iRP8Uox85XnAnlCdgL1wAdsc3N3EI/R2+1SkVYM5890cvPKJ75u
        HSf9AHpgP8/yT8XpJ2lMYwzfsJINVFJHAxZiyWEQo7jArb9gBy/5GjorBaAPFnMB/+OmPm7HRG6giBMU
        UkU6rckiS6XeLuVpl3OfpQCEoZbZdGCs29fiaE97r99Qx/N87PsPyz6AXijkf/na7083MJeXtE4BSwHo
        k73cyyd++VOsPMMsRViIJmQToCfyuZdD3OXTuelwhKd4x991U7IG0BcnmMkf2KbZrVbLKiYy3/9lc7IG
        0Bs1vMnXTGSS12We9fzAXJa5hIRKARiAAzzNx4zmCvqS7aaWruMI6/mS1T7sEiwFIBROdrGLf3AWl9Cd
        1mSRSQJlFFNEAVvZwNHArJaWAtAzlWxlKybisBBLNDZs1AV2mbwUgAi1QY2mtcJ+YfYzSfooGElYaoAY
        koIe/uEdB/GG3zlQpwIYRo4unr50kqQBwyGAznSWBWcUpCdQCkAiBeAJhzDRuOKkVCgBWIVZk1tlwNXD
        OhBANSsF2aLxR/+PTZAC8MQi5gfPExUwtvOUPIXUd7QMAyuYwVqupF0IHcdOMujd7Pcc7KZAxfVTxg4+
        NOzCkbALAKz8i0XEh3DMYGcw7zTbQL2Bl3lPJb02AWoooQVwygCVIU1ZlcLbWE2VNFig0bMfwDiefqdu
        Jq6c/tcAkpY8Zhlk6WCPI7ty9kQKIBQk8pxOmq8sKYDw1ADt9Zs0V/QTZiEDPkJAtJs70TroGtqJEbgT
        KFDKlQIYSY4OMuAkV3UTFP1TFeQTlAKYUqUAetFL2ILXC79QIYh8d8l4gGCQzwoh0mllgUijAHFa1hr+
        QgqjfFzkGWqO8zJvR1PvyxFDYcTRuI26GOznbgZzjl9ngYcCOwWsYz0NJn52s9eUHillNGsFksAp9Fpr
        nRlim1kqSI91ky874OqooPV5NSGXhTToNqGnr+1cLqD5BamiMriFAbQlSoe+NxNOStnG+/J00uAJACBe
        xwutbFilW1gikUgkEolEIpFIAoNJR78gh3oGE0ArBtFH43SICRvvyrV9RqIjC7H64Oy1MU4WWjOylTG8
        4hDHXB+9/dXcKG3ehA4s5mM6ipr8XhzzWQCyBviNjizFiZMVXncM1iljqPJRADXcJO1+xvzLzpTLZ3QX
        MQsTqPVZADdLywPQjZXNSuYbzgnejwUrKFQO6fylH/MY2ezOQP7JeaIJwJ+UyAhlGMh8BijuXsKTpAbn
        B8MVFVzHYeqbeCFM1Ply5LEhMXENz9LVzSvHWBis3RnCJQAHy3iNyiZPvZPyiDZ/HJN5nDZuXilgOh+I
        1qiO99oJrOZVciL8mf+NDJ5RcZsdZZyIqyTHaxgFOFhFH2l7oBuLVAJzD4nqHhuvcRi4jbERvkeBmWGs
        Vymdn13GAwILoJ4ilUwW8wQZEWv+FP6o6jP9gcvEzZirAMp5gMU43Ga0niX0jUjzd+c96lTM/5XYzaNS
        AEPJYq5qdndzu86XUgaaBMazRaU07HzEWWJnz1UAFQwHkplFuUqmq1hAz4gxf2/eolKlJKw8J/JEsCcB
        gIU7OKjaJdzJZBINb/w0/kC+ahkUMJU48TOpJgCAgaxRzX4V73OhgQ+DMjOAZaoNoZNtjDJG7j0JADrx
        hodh4kFm6XdbtRbRlicoUM13PR/T2yhZ9SwASGK6h5ARO+uZQCtDGT+Z61mDXTXPRTyu2+0kgiAAMDOU
        71QGhqcag1XcYBARJHE1S1Q7fU6c/MjVOthKNqQCAGjHc5R6KBYrK7m+2abx4pHIKBZT4TGXbwqyS0vA
        BQAWbmCzR2exlRVcJ6gIEhjOh6oD31PXT9xmRA/IBGzNslmpIgCAbrxCicdCqmQ5YwUTQQLD+LfH+s2J
        lfn0MJ7xAcayjyMcbryOsJsrPLzbwmi+9rJRTSXLmcTvBBgkmWjHBD7yImoHm5gY/u0kg1WcCaQ1+24H
        JdR6/EQOk7mHDh7fYyOf/7CCzbqNHkqiD6MZSR6xHt93lAW8wa/GfPr9F+P5vOml0nTipITVTKWbzqaR
        zXTiTpapzno2rfgX0l9GQLonjhGspMZrITawj7mMJlsHBWkmiyG8yG6Xfo+7q46vGRcB7u4WkcrtrKde
        QzhJJZt4hQnkhalIE+jKeF5mE2UaUtvABu4iU1+FrdcuVRvGMInzNG1jW0ch21jPOnZRHJJtL01kkMcl
        9KcfOV5a+1M42MkCFnFUbwWt5z51DtdwG+dj0fj+cg6wgfXs4CiVWIOQoiRSaE8efelPV82O23q2spBP
        9Nnl0/ugqjUjuYWLSdb8iXrKKeIX9vILe9lPKdYWbTMdRRJpdKIb3ehGF7JI1ixJqGYj77OSY3otYBGm
        HltxGTcx1OcgcjtVlHGQveyniBJKKKGMGmzYqKceZ7OFKQBmLFiwEE86GY1XW7rSmTSSfPbVF/ItH/EV
        J/VcuKLMPcfSh7EaxtdqNFCPDRt1VDRKoQInYMLUWAomTFhII4MMUonDQiwWP8cY9exhBUvYrv8jbUUK
        PjDRlsu5mgHk6ngb9mOsYxVfcFiMtTziRZ/E0Y1hDOVcsnSW+pNsYTVfkC/SUdaihh+l0I0ruJJ+OjiS
        1U4RW1nDt+wQb32j2PFnSXTlYi7ifNqHZa6wkuP8yBq+Z3+Iz1aXAmiChUx6chH96Ek2KUF3DjuxUsh2
        fmQzuzjhZZJLCiBkJJBOF3pxDj3pQLIfAzdPOKimjAPsZje72EMR1UYoNCMGYEeTTDod6cJZdKY9rUkk
        njif5dBALXVUUcBBDnGQA/xCERXCnAoasQJoXivEk0g2ueSSTSqtSCWVFOKIxUI0ZkxNwrKrsGLFSiUn
        OUERhZzgBOVUi13NR7IAXIlpvKIwYyYaC2bs2LHjwEEDDdgbnUYSiUQikUgkEolEIpFIJBKJRCKRSCQS
        iUQiNP8PDKBLmaX2zC0AAAAASUVORK5CYII=
</value>
  </data>
</root>